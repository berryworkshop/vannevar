# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-28 03:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('collection', '0015_auto_20160726_0826'),
    ]

    operations = [
        migrations.AlterField(
            model_name='addressattr',
            name='category',
            field=models.CharField(choices=[('PRIMARY', 'primary'), ('SECONDARY', 'secondary'), ('WORK', 'work'), ('HOME', 'home'), ('INFODESK', 'main information desk')], default='PRIMARY', help_text='What type of postal address is this?', max_length=50),
        ),
        migrations.AlterField(
            model_name='addressattr',
            name='city',
            field=models.CharField(help_text='Provide a city or community name.', max_length=100),
        ),
        migrations.AlterField(
            model_name='addressattr',
            name='country',
            field=models.CharField(choices=[('ABW', 'Aruba'), ('AFG', 'Afghanistan'), ('AGO', 'Angola'), ('AIA', 'Anguilla'), ('ALA', 'Åland Islands'), ('ALB', 'Albania'), ('AND', 'Andorra'), ('ARE', 'United Arab Emirates'), ('ARG', 'Argentina'), ('ARM', 'Armenia'), ('ASM', 'American Samoa'), ('ATA', 'Antarctica'), ('ATF', 'French Southern Territories'), ('ATG', 'Antigua and Barbuda'), ('AUS', 'Australia'), ('AUT', 'Austria'), ('AZE', 'Azerbaijan'), ('BDI', 'Burundi'), ('BEL', 'Belgium'), ('BEN', 'Benin'), ('BES', 'Bonaire, Sint Eustatius and Saba'), ('BFA', 'Burkina Faso'), ('BGD', 'Bangladesh'), ('BGR', 'Bulgaria'), ('BHR', 'Bahrain'), ('BHS', 'Bahamas'), ('BIH', 'Bosnia and Herzegovina'), ('BLM', 'Saint Barthélemy'), ('BLR', 'Belarus'), ('BLZ', 'Belize'), ('BMU', 'Bermuda'), ('BOL', 'Bolivia, Plurinational State of'), ('BRA', 'Brazil'), ('BRB', 'Barbados'), ('BRN', 'Brunei Darussalam'), ('BTN', 'Bhutan'), ('BVT', 'Bouvet Island'), ('BWA', 'Botswana'), ('CAF', 'Central African Republic'), ('CAN', 'Canada'), ('CCK', 'Cocos (Keeling) Islands'), ('CHE', 'Switzerland'), ('CHL', 'Chile'), ('CHN', 'China'), ('CIV', "Côte d'Ivoire"), ('CMR', 'Cameroon'), ('COD', 'Congo, the Democratic Republic of the'), ('COG', 'Congo'), ('COK', 'Cook Islands'), ('COL', 'Colombia'), ('COM', 'Comoros'), ('CPV', 'Cabo Verde'), ('CRI', 'Costa Rica'), ('CUB', 'Cuba'), ('CUW', 'Curaçao'), ('CXR', 'Christmas Island'), ('CYM', 'Cayman Islands'), ('CYP', 'Cyprus'), ('CZE', 'Czech Republic'), ('DEU', 'Germany'), ('DJI', 'Djibouti'), ('DMA', 'Dominica'), ('DNK', 'Denmark'), ('DOM', 'Dominican Republic'), ('DZA', 'Algeria'), ('ECU', 'Ecuador'), ('EGY', 'Egypt'), ('ERI', 'Eritrea'), ('ESH', 'Western Sahara'), ('ESP', 'Spain'), ('EST', 'Estonia'), ('ETH', 'Ethiopia'), ('FIN', 'Finland'), ('FJI', 'Fiji'), ('FLK', 'Falkland Islands (Malvinas)'), ('FRA', 'France'), ('FRO', 'Faroe Islands'), ('FSM', 'Micronesia, Federated States of'), ('GAB', 'Gabon'), ('GBR', 'United Kingdom'), ('GEO', 'Georgia'), ('GGY', 'Guernsey'), ('GHA', 'Ghana'), ('GIB', 'Gibraltar'), ('GIN', 'Guinea'), ('GLP', 'Guadeloupe'), ('GMB', 'Gambia'), ('GNB', 'Guinea-Bissau'), ('GNQ', 'Equatorial Guinea'), ('GRC', 'Greece'), ('GRD', 'Grenada'), ('GRL', 'Greenland'), ('GTM', 'Guatemala'), ('GUF', 'French Guiana'), ('GUM', 'Guam'), ('GUY', 'Guyana'), ('HKG', 'Hong Kong'), ('HMD', 'Heard Island and McDonald Islands'), ('HND', 'Honduras'), ('HRV', 'Croatia'), ('HTI', 'Haiti'), ('HUN', 'Hungary'), ('IDN', 'Indonesia'), ('IMN', 'Isle of Man'), ('IND', 'India'), ('IOT', 'British Indian Ocean Territory'), ('IRL', 'Ireland'), ('IRN', 'Iran, Islamic Republic of'), ('IRQ', 'Iraq'), ('ISL', 'Iceland'), ('ISR', 'Israel'), ('ITA', 'Italy'), ('JAM', 'Jamaica'), ('JEY', 'Jersey'), ('JOR', 'Jordan'), ('JPN', 'Japan'), ('KAZ', 'Kazakhstan'), ('KEN', 'Kenya'), ('KGZ', 'Kyrgyzstan'), ('KHM', 'Cambodia'), ('KIR', 'Kiribati'), ('KNA', 'Saint Kitts and Nevis'), ('KOR', 'Korea, Republic of'), ('KWT', 'Kuwait'), ('LAO', "Lao People's Democratic Republic"), ('LBN', 'Lebanon'), ('LBR', 'Liberia'), ('LBY', 'Libya'), ('LCA', 'Saint Lucia'), ('LIE', 'Liechtenstein'), ('LKA', 'Sri Lanka'), ('LSO', 'Lesotho'), ('LTU', 'Lithuania'), ('LUX', 'Luxembourg'), ('LVA', 'Latvia'), ('MAC', 'Macao'), ('MAF', 'Saint Martin (French part)'), ('MAR', 'Morocco'), ('MCO', 'Monaco'), ('MDA', 'Moldova, Republic of'), ('MDG', 'Madagascar'), ('MDV', 'Maldives'), ('MEX', 'Mexico'), ('MHL', 'Marshall Islands'), ('MKD', 'Macedonia, the former Yugoslav Republic of'), ('MLI', 'Mali'), ('MLT', 'Malta'), ('MMR', 'Myanmar'), ('MNE', 'Montenegro'), ('MNG', 'Mongolia'), ('MNP', 'Northern Mariana Islands'), ('MOZ', 'Mozambique'), ('MRT', 'Mauritania'), ('MSR', 'Montserrat'), ('MTQ', 'Martinique'), ('MUS', 'Mauritius'), ('MWI', 'Malawi'), ('MYS', 'Malaysia'), ('MYT', 'Mayotte'), ('NAM', 'Namibia'), ('NCL', 'New Caledonia'), ('NER', 'Niger'), ('NFK', 'Norfolk Island'), ('NGA', 'Nigeria'), ('NIC', 'Nicaragua'), ('NIU', 'Niue'), ('NLD', 'Netherlands'), ('NOR', 'Norway'), ('NPL', 'Nepal'), ('NRU', 'Nauru'), ('NZL', 'New Zealand'), ('OMN', 'Oman'), ('PAK', 'Pakistan'), ('PAN', 'Panama'), ('PCN', 'Pitcairn'), ('PER', 'Peru'), ('PHL', 'Philippines'), ('PLW', 'Palau'), ('PNG', 'Papua New Guinea'), ('POL', 'Poland'), ('PRI', 'Puerto Rico'), ('PRK', "Korea, Democratic People's Republic of"), ('PRT', 'Portugal'), ('PRY', 'Paraguay'), ('PSE', 'Palestine, State of'), ('PYF', 'French Polynesia'), ('QAT', 'Qatar'), ('REU', 'Réunion'), ('ROU', 'Romania'), ('RUS', 'Russian Federation'), ('RWA', 'Rwanda'), ('SAU', 'Saudi Arabia'), ('SDN', 'Sudan'), ('SEN', 'Senegal'), ('SGP', 'Singapore'), ('SGS', 'South Georgia and the South Sandwich Islands'), ('SHN', 'Saint Helena, Ascension and Tristan da Cunha'), ('SJM', 'Svalbard and Jan Mayen'), ('SLB', 'Solomon Islands'), ('SLD', 'Somaliland'), ('SLE', 'Sierra Leone'), ('SLV', 'El Salvador'), ('SMR', 'San Marino'), ('SOM', 'Somalia'), ('SPM', 'Saint Pierre and Miquelon'), ('SRB', 'Serbia'), ('SSD', 'South Sudan'), ('STP', 'Sao Tome and Principe'), ('SUR', 'Suriname'), ('SVK', 'Slovakia'), ('SVN', 'Slovenia'), ('SWE', 'Sweden'), ('SWZ', 'Swaziland'), ('SXM', 'Sint Maarten (Dutch part)'), ('SYC', 'Seychelles'), ('SYR', 'Syrian Arab Republic'), ('TCA', 'Turks and Caicos Islands'), ('TCD', 'Chad'), ('TGO', 'Togo'), ('THA', 'Thailand'), ('TJK', 'Tajikistan'), ('TKL', 'Tokelau'), ('TKM', 'Turkmenistan'), ('TLS', 'Timor-Leste'), ('TON', 'Tonga'), ('TTO', 'Trinidad and Tobago'), ('TUN', 'Tunisia'), ('TUR', 'Turkey'), ('TUV', 'Tuvalu'), ('TWN', 'Taiwan, Province of China'), ('TZA', 'Tanzania, United Republic of'), ('UGA', 'Uganda'), ('UKR', 'Ukraine'), ('UMI', 'United States Minor Outlying Islands'), ('URY', 'Uruguay'), ('USA', 'United States of America'), ('UZB', 'Uzbekistan'), ('VAT', 'Holy See (Vatican City State)'), ('VCT', 'Saint Vincent and the Grenadines'), ('VEN', 'Venezuela, Bolivarian Republic of'), ('VGB', 'Virgin Islands, British'), ('VIR', 'Virgin Islands, U.S.'), ('VNM', 'Viet Nam'), ('VUT', 'Vanuatu'), ('WLF', 'Wallis and Futuna'), ('WSM', 'Samoa'), ('YEM', 'Yemen'), ('ZAF', 'South Africa'), ('ZMB', 'Zambia'), ('ZWE', 'Zimbabwe')], default='USA', help_text='Select a nation or country.', max_length=3),
        ),
        migrations.AlterField(
            model_name='addressattr',
            name='postal_code',
            field=models.CharField(help_text='Provide a zip or other postal code.', max_length=100),
        ),
        migrations.AlterField(
            model_name='addressattr',
            name='state_region',
            field=models.CharField(help_text='Provide a state, province, or other region for postal purposes.', max_length=100),
        ),
        migrations.AlterField(
            model_name='addressattr',
            name='street',
            field=models.TextField(help_text='Provide a street address.  For a new line, press <pre>shift-enter</pre> (<pre>shift-return</pre> on a Mac).'),
        ),
        migrations.AlterField(
            model_name='book',
            name='title',
            field=models.CharField(help_text='Provide a title.', max_length=200),
        ),
        migrations.AlterField(
            model_name='organization',
            name='related_organizations',
            field=models.ManyToManyField(help_text='Select or create a related Organization.', through='collection.OrgOrgRelationship', to='collection.Organization'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='related_people',
            field=models.ManyToManyField(help_text='Select or create a related (member) Person.', related_name='organizations', through='collection.OrgPersonRelationship', to='collection.Person'),
        ),
        migrations.AlterField(
            model_name='orgorgrelationship',
            name='category',
            field=models.CharField(choices=[('DEPARTMENT', 'is department of'), ('LOCATED', 'is located in'), ('MEMBER', 'is member of'), ('OWNED', 'is owned by'), ('PART', 'is part of')], default='DEPARTMENT', help_text='Select a qualifier for this relationship.', max_length=50),
        ),
        migrations.AlterField(
            model_name='orgorgrelationship',
            name='child',
            field=models.ForeignKey(help_text='Select a child Organization.', on_delete=django.db.models.deletion.CASCADE, related_name='children', to='collection.Organization'),
        ),
        migrations.AlterField(
            model_name='orgorgrelationship',
            name='parent',
            field=models.ForeignKey(help_text='Select a parent Organization.', on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='collection.Organization'),
        ),
        migrations.AlterField(
            model_name='orgpersonrelationship',
            name='category',
            field=models.CharField(choices=[('EMPLOYED', 'is employed by'), ('CREATOR', 'is creator of'), ('MEMBER', 'is member of')], default='EMPLOYED', help_text='Select a qualifier for this relationship.', max_length=50),
        ),
        migrations.AlterField(
            model_name='orgpersonrelationship',
            name='organization',
            field=models.ForeignKey(help_text='Select a parent Organization.', on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to='collection.Organization'),
        ),
        migrations.AlterField(
            model_name='orgpersonrelationship',
            name='person',
            field=models.ForeignKey(help_text='Select a Person who is part of this Organization.', on_delete=django.db.models.deletion.CASCADE, related_name='people', to='collection.Person'),
        ),
        migrations.AlterField(
            model_name='person',
            name='name_first',
            field=models.CharField(blank=True, help_text='Provide other names here, including given and middle names.', max_length=200),
        ),
        migrations.AlterField(
            model_name='person',
            name='name_last',
            field=models.CharField(help_text='Provide a surname.', max_length=200),
        ),
        migrations.AlterField(
            model_name='photograph',
            name='title',
            field=models.CharField(help_text='Provide a title.', max_length=200),
        ),
        migrations.AlterField(
            model_name='tool',
            name='license',
            field=models.ForeignKey(help_text='Select a license for this software tool.', on_delete=django.db.models.deletion.CASCADE, to='collection.License'),
        ),
        migrations.AlterField(
            model_name='tool',
            name='title',
            field=models.CharField(help_text='Provide a title.', max_length=200),
        ),
        migrations.AlterField(
            model_name='website',
            name='title',
            field=models.CharField(help_text='Provide a title.', max_length=200),
        ),
        migrations.AlterField(
            model_name='website',
            name='url',
            field=models.URLField(help_text='Provide the root URL for this Website, in the form <pre>http://example.com/</pre>.'),
        ),
    ]
