# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-08-02 04:40
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('object_id', models.PositiveIntegerField(help_text='Provide the actual object ID of the generic relation within the table of the Content Type.')),
                ('year', models.PositiveIntegerField(help_text='During what year did the event happen?', validators=[django.core.validators.MaxValueValidator(9999)])),
                ('category', models.CharField(choices=[('INCORPORATION', 'incorporation'), ('TERMINATION', 'termination')], default='INCORPORATION', help_text='What is this event?', max_length=50)),
                ('content_type', models.ForeignKey(help_text='Provide the model name for the generic relation.', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
                ('slug', models.SlugField(help_text='Work from the general to the specific, e.g. <em>last-name-first-name</em>.', max_length=200, unique=True)),
                ('name', models.CharField(help_text='Provide the canonical name for this Organization.', max_length=200, unique=True)),
                ('website', models.URLField(blank=True, help_text='Provide the canonical website URL for this Organization.', unique=True)),
                ('address', models.TextField(blank=True, help_text='Provide the canonical physical address for this Organization.', unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgOrgRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('DEPARTMENT', 'is department of'), ('LOCATED', 'is located in'), ('MEMBER', 'is member of'), ('OWNED', 'is owned by'), ('PART', 'is part of')], default='DEPARTMENT', help_text='Select a qualifier for this relationship.', max_length=50)),
                ('child', models.ForeignKey(help_text='Select a child Organization.', on_delete=django.db.models.deletion.CASCADE, related_name='children', to='collection.Organization')),
                ('parent', models.ForeignKey(help_text='Select a parent Organization.', on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='collection.Organization')),
            ],
            options={
                'verbose_name': 'organization relationship',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='related_organizations',
            field=models.ManyToManyField(help_text='Select or create a related Organization.', through='collection.OrgOrgRelationship', to='collection.Organization'),
        ),
    ]
